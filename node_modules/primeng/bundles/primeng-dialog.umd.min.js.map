{"version":3,"sources":["ng://primeng/dialog/dialog.ts"],"names":["idx","Dialog","el","renderer","zone","this","draggable","resizable","closeOnEscape","closable","responsive","showHeader","breakpoint","blockScroll","autoZIndex","baseZIndex","minX","minY","focusOnShow","focusTrap","transitionOptions","closeIcon","minimizeIcon","maximizeIcon","onShow","EventEmitter","onHide","visibleChange","id","_style","Object","defineProperty","prototype","value","__assign","originalStyle","focus","focusable","DomHandler","findSingle","container","runOutsideAngular","setTimeout","positionOverlay","viewport","getViewport","getOuterHeight","contentViewChild","nativeElement","scrollHeight","clientHeight","height","style","positionLeft","positionTop","left","top","center","close","event","emit","preventDefault","elementWidth","getOuterWidth","elementHeight","visibility","display","x","Math","max","floor","width","y","enableModality","_this","mask","document","createElement","zIndex","String","parseInt","maskStyleClass","addMultipleClasses","dismissableMask","maskClickListener","listen","body","appendChild","addClass","disableModality","unbindMaskClickListener","removeChild","bodyChildren","children","hasBlockerMasks","i","length","bodyChild","hasClass","removeClass","toggleMaximize","maximized","revertMaximize","maximize","preMaximizePageX","parseFloat","preMaximizePageY","preMaximizeContainerWidth","preMaximizeContainerHeight","preMaximizeContentHeight","diffHeight","headerViewChild","footerViewChild","moveOnTop","zindex","onCloseMouseDown","closeIconMouseDown","initDrag","dragging","lastPageX","pageX","lastPageY","pageY","onKeydown","which","focusableElements","getFocusableElements","activeElement","focusedIndex","indexOf","shiftKey","onDrag","containerWidth","containerHeight","deltaX","deltaY","offset","getOffset","leftPos","topPos","endDrag","initResize","preWidth","resizing","onResize","contentHeight","newWidth","newHeight","minWidth","minHeight","onResizeEnd","bindGlobalListeners","bindDocumentKeydownListener","bindDocumentDragListener","bindDocumentDragEndListener","bindDocumentResizeListeners","bindDocumentResponsiveListener","bindDocumentEscapeListener","unbindGlobalListeners","unbindDocumentDragListener","unbindDocumentKeydownListener","unbindDocumentDragEndListener","unbindDocumentResizeListeners","unbindDocumentResponsiveListener","unbindDocumentEscapeListener","documentKeydownListener","bind","window","addEventListener","removeEventListener","documentDragListener","documentDragEndListener","documentResizeListener","documentResizeEndListener","documentResponsiveListener","onWindowResize","documentEscapeListener","appendContainer","appendTo","restoreAppend","onAnimationStart","toState","element","modal","onContainerDestroy","ngOnDestroy","ElementRef","Renderer2","NgZone","__decorate","Input","ContentChildren","Header","descendants","Footer","ViewChild","Output","Component","selector","template","animations","trigger","state","transform","opacity","transition","animate","DialogModule","NgModule","imports","CommonModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,\n    ContentChildren,QueryList,ViewChild,NgZone} from '@angular/core';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {Header,Footer,SharedModule} from 'primeng/api';\n\nlet idx: number = 0;\n\n@Component({\nselector: 'p-dialog',\ntemplate: `\n    <div #container [ngClass]=\"{'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl':rtl,'ui-dialog-draggable':draggable,'ui-dialog-resizable':resizable}\"\n        [ngStyle]=\"style\" [class]=\"styleClass\"\n        [@animation]=\"{value: 'visible', params: {transitionParams: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"visible\">\n        <div #titlebar class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\n            <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"header\">{{header}}</span>\n            <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"headerFacet && headerFacet.first\">\n                <ng-content select=\"p-header\"></ng-content>\n            </span>\n            <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\" (mousedown)=\"onCloseMouseDown($event)\">\n                <span [class]=\"closeIcon\"></span>\n            </a>\n            <a *ngIf=\"maximizable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"toggleMaximize($event)\" (keydown.enter)=\"toggleMaximize($event)\">\n                <span [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\n            </a>\n        </div>\n        <div #content class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"contentStyle\">\n            <ng-content></ng-content>\n        </div>\n        <div #footer class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footerFacet && footerFacet.first\">\n            <ng-content select=\"p-footer\"></ng-content>\n        </div>\n        <div *ngIf=\"resizable\" class=\"ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\n    </div>\n`,\nanimations: [\n    trigger('animation', [\n        state('void', style({\n            transform: 'scale(0.7)',\n            opacity: 0\n        })),\n        state('visible', style({\n            transform: 'none',\n            opacity: 1\n        })),\n        transition('* => *', animate('{{transitionParams}}'))\n    ])\n]\n})\nexport class Dialog implements OnDestroy {\n\n    @Input() visible: boolean;\n\n    @Input() header: string;\n\n    @Input() draggable: boolean = true;\n\n    @Input() resizable: boolean = true;\n\n    @Input() positionLeft: number;\n\n    @Input() positionTop: number;\n\n    @Input() contentStyle: any;\n\n    @Input() modal: boolean;\n\n    @Input() closeOnEscape: boolean = true;\n\n    @Input() dismissableMask: boolean;\n\n    @Input() rtl: boolean;\n\n    @Input() closable: boolean = true;\n\n    @Input() responsive: boolean = true;\n\n    @Input() appendTo: any;\n\n    @Input() styleClass: string;\n\n    @Input() showHeader: boolean = true;\n\n    @Input() breakpoint: number = 640;\n\n    @Input() blockScroll: boolean = false;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() minX: number = 0;\n\n    @Input() minY: number = 0;\n\n    @Input() focusOnShow: boolean = true;\n\n    @Input() maximizable: boolean;\n\n    @Input() focusTrap: boolean = true;\n\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @Input() minimizeIcon: string = 'pi pi-window-minimize';\n\n    @Input() maximizeIcon: string = 'pi pi-window-maximize';\n\n    @ContentChildren(Header, {descendants: false}) headerFacet: QueryList<Header>;\n\n    @ContentChildren(Footer, {descendants: false}) footerFacet: QueryList<Header>;\n        \n    @ViewChild('titlebar') headerViewChild: ElementRef;\n\n    @ViewChild('content') contentViewChild: ElementRef;\n\n    @ViewChild('footer') footerViewChild: ElementRef;\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @Output() visibleChange:EventEmitter<any> = new EventEmitter();\n\n    container: HTMLDivElement;\n\n    _visible: boolean;\n\n    dragging: boolean;\n\n    documentDragListener: any;\n\n    documentKeydownListener: any;\n\n    documentDragEndListener: any;\n\n    resizing: boolean;\n\n    documentResizeListener: any;\n\n    documentResizeEndListener: any;\n\n    documentResponsiveListener: any;\n\n    documentEscapeListener: Function;\n\n    maskClickListener: Function;\n\n    lastPageX: number;\n\n    lastPageY: number;\n\n    mask: HTMLDivElement;\n\n    closeIconMouseDown: boolean;\n\n    preWidth: string;\n\n    preventVisibleChangePropagation: boolean;\n        \n    maximized: boolean;\n\n    preMaximizeContentHeight: number;\n\n    preMaximizeContainerWidth: number;\n\n    preMaximizeContainerHeight: number;\n\n    preMaximizePageX: number;\n\n    preMaximizePageY: number;\n\n    id: string = `ui-dialog-${idx++}`;\n\n    _style: any = {};\n\n    originalStyle: any;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone) {}\n\n    @Input() get style(): any {\n        return this._style;\n    }\n    set style(value:any) {\n        if (value) {\n            this._style = {...value};\n            this.originalStyle = value;\n        }\n    }\n\n    focus() {\n        let focusable = DomHandler.findSingle(this.container, 'button');\n        if(focusable) {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => focusable.focus(), 5);\n            });\n        }\n    }\n\n    positionOverlay() {\n        let viewport = DomHandler.getViewport();\n        if (DomHandler.getOuterHeight(this.container) + this.contentViewChild.nativeElement.scrollHeight - this.contentViewChild.nativeElement.clientHeight > viewport.height) {\n            this.contentViewChild.nativeElement.style.height = (viewport.height * .75) + 'px';\n            this._style.height = 'auto';\n        } \n        else {\n            this.contentViewChild.nativeElement.style.height = null;\n        }\n        \n        if (this.positionLeft >= 0 && this.positionTop >= 0) {\n            this._style.left = this.positionLeft + 'px';\n            this._style.top = this.positionTop + 'px';\n        }\n        else if (this.positionTop >= 0) {\n            this.center();\n            this._style.top = this.positionTop + 'px';\n        }\n        else{\n            this.center();\n        }\n    }\n\n    close(event: Event) {\n        this.visibleChange.emit(false);\n        event.preventDefault();\n    }\n\n    center() {\n        let elementWidth = DomHandler.getOuterWidth(this.container);\n        let elementHeight = DomHandler.getOuterHeight(this.container);\n        if(elementWidth == 0 && elementHeight == 0) {\n            this.container.style.visibility = 'hidden';\n            this.container.style.display = 'block';\n            elementWidth = DomHandler.getOuterWidth(this.container);\n            elementHeight = DomHandler.getOuterHeight(this.container);\n            this.container.style.display = 'none';\n            this.container.style.visibility = 'visible';\n        }\n        let viewport = DomHandler.getViewport();\n        let x = Math.max(Math.floor((viewport.width - elementWidth) / 2), 0);\n        let y = Math.max(Math.floor((viewport.height - elementHeight) / 2), 0);\n\n        this._style.left = x + 'px';\n        this._style.top = y + 'px';\n    }\n\n    enableModality() {\n        if (!this.mask) {\n            this.mask = document.createElement('div');\n            this.mask.style.zIndex = String(parseInt(this.container.style.zIndex) - 1);\n            let maskStyleClass = 'ui-widget-overlay ui-dialog-mask';\n            if(this.blockScroll) {\n                maskStyleClass += ' ui-dialog-mask-scrollblocker';\n            }\n            DomHandler.addMultipleClasses(this.mask, maskStyleClass);\n            \n            if(this.closable && this.dismissableMask) {\n                this.maskClickListener = this.renderer.listen(this.mask, 'click', (event: any) => {\n                    this.close(event);\n                });\n            }\n            document.body.appendChild(this.mask);\n            if(this.blockScroll) {\n                DomHandler.addClass(document.body, 'ui-overflow-hidden');\n            }\n        }\n    }\n\n    disableModality() {\n        if (this.mask) {\n            this.unbindMaskClickListener();\n            document.body.removeChild(this.mask);\n\n            if (this.blockScroll) {\n                let bodyChildren = document.body.children;\n                let hasBlockerMasks: boolean;\n                for (let i = 0; i < bodyChildren.length; i++) {\n                    let bodyChild = bodyChildren[i];\n                    if (DomHandler.hasClass(bodyChild, 'ui-dialog-mask-scrollblocker')) {\n                        hasBlockerMasks = true;\n                        break;\n                    }\n                }\n                \n                if (!hasBlockerMasks) {\n                    DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n                }\n            }\n            this.mask = null;\n        }\n    }\n\n    toggleMaximize(event) {\n        if (this.maximized)\n            this.revertMaximize();\n        else\n            this.maximize();\n\n        event.preventDefault();\n    }\n\n    maximize() {\n        this.preMaximizePageX = parseFloat(this.container.style.top);\n        this.preMaximizePageY = parseFloat(this.container.style.left);\n        this.preMaximizeContainerWidth = DomHandler.getOuterWidth(this.container);\n        this.preMaximizeContainerHeight = DomHandler.getOuterHeight(this.container);\n        this.preMaximizeContentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\n\n        this._style.top = '0px';\n        this._style.left = '0px';\n        this._style.width = '100vw';\n        this._style.height = '100vh';\n        let diffHeight = 0;\n        if(this.headerViewChild && this.headerViewChild.nativeElement) {\n            diffHeight += DomHandler.getOuterHeight(this.headerViewChild.nativeElement);\n        }\n        if(this.footerViewChild && this.footerViewChild.nativeElement) {\n            diffHeight += DomHandler.getOuterHeight(this.footerViewChild.nativeElement);\n        }\n        this.contentViewChild.nativeElement.style.height = 'calc(100vh - ' + diffHeight +'px)';\n\n        DomHandler.addClass(this.container, 'ui-dialog-maximized');\n        if(!this.blockScroll) {\n            DomHandler.addClass(document.body, 'ui-overflow-hidden');\n        }\n\n        this.moveOnTop();\n\n        this.maximized = true;\n    }\n\n    revertMaximize() {\n        this._style.top = this.preMaximizePageX + 'px';\n        this._style.left = this.preMaximizePageY + 'px';\n        this._style.width = this.preMaximizeContainerWidth + 'px';\n        this._style.height = this.preMaximizeContainerHeight + 'px';\n        this.contentViewChild.nativeElement.style.height = this.preMaximizeContentHeight + 'px';\n\n        if (!this.blockScroll) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n        }\n\n        this.maximized = false;\n\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => DomHandler.removeClass(this.container, 'ui-dialog-maximized'), 300);\n        });\n    }\n\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n        }\n    }\n\n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n\n    onCloseMouseDown(event: Event) {\n        this.closeIconMouseDown = true;\n    }\n\n    initDrag(event: MouseEvent) {\n        if (this.closeIconMouseDown) {\n            this.closeIconMouseDown = false;\n            return;\n        }\n        \n        if (this.draggable) {\n            this.dragging = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if(this.focusTrap) {\n            if(event.which === 9) {\n                event.preventDefault();\n                \n                let focusableElements = DomHandler.getFocusableElements(this.container);\n\n                if (focusableElements && focusableElements.length > 0) {\n                    if (!document.activeElement) {\n                        focusableElements[0].focus();\n                    }\n                    else {\n                        let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                        if (event.shiftKey) {\n                            if (focusedIndex == -1 || focusedIndex === 0)\n                                focusableElements[focusableElements.length - 1].focus();\n                            else\n                                focusableElements[focusedIndex - 1].focus();\n                        }\n                        else {\n                            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                                focusableElements[0].focus();\n                            else\n                                focusableElements[focusedIndex + 1].focus();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    onDrag(event: MouseEvent) {\n        if (this.dragging) {\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let offset = DomHandler.getOffset(this.container);\n            let leftPos = offset.left + deltaX;\n            let topPos = offset.top + deltaY;\n            let viewport = DomHandler.getViewport();\n\n            if (leftPos >= this.minX && (leftPos + containerWidth) < viewport.width) {\n                this._style.left = leftPos + 'px';\n            }\n\n            if (topPos >= this.minY && (topPos + containerHeight) < viewport.height) {\n                this._style.top = topPos + 'px';\n            }\n\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n\n            this.container.style.left = leftPos + 'px';\n            this.container.style.top = topPos + 'px';\n        }\n    }\n\n    endDrag(event: MouseEvent) {\n        if (this.draggable) {\n            this.dragging = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    initResize(event: MouseEvent) {\n        if (this.resizable) {\n            this.preWidth = null;\n            this.resizing = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    onResize(event: MouseEvent) {\n        if (this.resizing) {\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let contentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\n            let newWidth = containerWidth + deltaX;\n            let newHeight = containerHeight + deltaY;\n            let minWidth = this.container.style.minWidth;\n            let minHeight = this.container.style.minHeight;\n            let offset = DomHandler.getOffset(this.container);\n            let viewport = DomHandler.getViewport();\n\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\n                this._style.width = newWidth + 'px';\n                this.container.style.width = this._style.width;\n            }\n            \n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\n                this._style.height = newHeight + 'px';\n                this.contentViewChild.nativeElement.style.height = contentHeight + deltaY + 'px';\n            }\n\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n        }\n    }\n\n    onResizeEnd() {\n        if (this.resizing) {\n            this.resizing = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    bindGlobalListeners() {\n        if (this.focusTrap) {\n            this.bindDocumentKeydownListener();\n        }\n\n        if (this.draggable) {\n            this.bindDocumentDragListener();\n            this.bindDocumentDragEndListener();\n        }\n        \n        if (this.resizable) {\n            this.bindDocumentResizeListeners();\n        }\n        \n        if (this.responsive) {\n            this.bindDocumentResponsiveListener();\n        }\n        \n        if (this.closeOnEscape && this.closable) {\n            this.bindDocumentEscapeListener();\n        }\n    }\n\n    unbindGlobalListeners() {\n        this.unbindDocumentDragListener();\n        this.unbindDocumentKeydownListener();\n        this.unbindDocumentDragEndListener();\n        this.unbindDocumentResizeListeners();\n        this.unbindDocumentResponsiveListener();\n        this.unbindDocumentEscapeListener();\n    }\n\n    bindDocumentKeydownListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentKeydownListener = this.onKeydown.bind(this);\n            window.document.addEventListener('keydown', this.documentKeydownListener);\n        });\n    }\n\n    unbindDocumentKeydownListener() {\n        if(this.documentKeydownListener) {\n            window.document.removeEventListener('keydown', this.documentKeydownListener);\n            this.documentKeydownListener = null;\n        }\n    }\n\n    bindDocumentDragListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragListener = this.onDrag.bind(this);\n            window.document.addEventListener('mousemove', this.documentDragListener);\n        });\n    }\n\n    unbindDocumentDragListener() {\n        if(this.documentDragListener) {\n            window.document.removeEventListener('mousemove', this.documentDragListener);\n            this.documentDragListener = null;\n        }\n    }\n\n    bindDocumentDragEndListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragEndListener = this.endDrag.bind(this);\n            window.document.addEventListener('mouseup', this.documentDragEndListener);\n        });\n    }\n\n    unbindDocumentDragEndListener() {\n        if (this.documentDragEndListener) {\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\n            this.documentDragEndListener = null;\n        }\n    }\n\n    bindDocumentResizeListeners() {\n        this.zone.runOutsideAngular(() => {\n            this.documentResizeListener = this.onResize.bind(this);\n            this.documentResizeEndListener = this.onResizeEnd.bind(this);\n            window.document.addEventListener('mousemove', this.documentResizeListener);\n            window.document.addEventListener('mouseup', this.documentResizeEndListener);\n        });\n    }\n\n    unbindDocumentResizeListeners() {\n        if (this.documentResizeListener && this.documentResizeEndListener) {\n            window.document.removeEventListener('mouseup', this.documentResizeListener);\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\n            this.documentResizeListener = null;\n            this.documentResizeEndListener = null;\n        }\n    }\n\n    bindDocumentResponsiveListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentResponsiveListener = this.onWindowResize.bind(this);\n            window.addEventListener('resize', this.documentResponsiveListener);\n        });\n    }\n\n    unbindDocumentResponsiveListener() {\n        if (this.documentResponsiveListener) {\n            window.removeEventListener('resize', this.documentResponsiveListener);\n            this.documentResponsiveListener = null;\n        }\n    }\n\n    onWindowResize() {\n        if (this.maximized) {\n            return;\n        }\n        \n        let viewport = DomHandler.getViewport();\n        if (viewport.width <= this.breakpoint) {\n            if (!this.preWidth) {\n                this.preWidth = this._style.width;\n            }\n            \n            this._style.left = '0px';\n            this._style.width = '100%';\n\n            //outside zone\n            this.container.style.left = this._style.left;\n            this.container.style.width = this._style.width;\n        }\n        else {\n            if (this.preWidth) {\n                this._style.width = this.preWidth;\n            }\n\n            //outside zone\n            this.container.style.left = this._style.left;\n            this.container.style.top = this._style.top;\n            this.container.style.width = this._style.width;\n\n            this.positionOverlay();\n        }\n    }\n\n    bindDocumentEscapeListener() {\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', (event) => {\n            if (event.which == 27) {\n                if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex)) {\n                    this.close(event);\n                }\n            }\n        });\n    }\n\n    unbindDocumentEscapeListener() {\n        if(this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n\n    appendContainer() {\n        if(this.appendTo) {\n            if(this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                DomHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.onShow.emit({});\n                this.appendContainer();\n                this.moveOnTop();\n                this.positionOverlay();\n                this.bindGlobalListeners();\n        \n                if (this.maximized) {\n                    DomHandler.addClass(document.body, 'ui-overflow-hidden');\n                }\n                \n                if (this.modal) {\n                    this.enableModality();\n                }\n        \n                if (this.focusOnShow) {\n                    this.focus();\n                }\n\n                if (this.responsive) {\n                    this.onWindowResize();\n                }\n            break;\n\n            case 'void':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n            break;\n        }\n    }\n\n    onContainerDestroy() {\n        this.unbindGlobalListeners();\n        this.dragging = false;\n\n        if (this.maximized) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            this.maximized = false;\n        }\n        \n        if (this.modal) {\n            this.disableModality();\n        }\n\n        this.container = null;\n\n        this._style = this.originalStyle ? {...this.originalStyle} : {};\n    }\n\n    ngOnDestroy() {\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    }\n\n}\n\n@NgModule({\nimports: [CommonModule],\nexports: [Dialog,SharedModule],\ndeclarations: [Dialog]\n})\nexport class DialogModule { }"]}