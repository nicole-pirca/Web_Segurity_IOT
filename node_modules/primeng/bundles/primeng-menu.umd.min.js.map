{"version":3,"sources":["ng://primeng/menu/menu.ts"],"names":["MenuItemContent","menu","this","Inject","args","forwardRef","Menu","__decorate","Input","Component","selector","template","__param","el","renderer","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onShow","EventEmitter","onHide","prototype","toggle","event","visible","hide","show","preventDocumentDefault","target","currentTarget","onOverlayAnimationStart","toState","popup","container","element","moveOnTop","emit","appendOverlay","DomHandler","absolutePosition","bindDocumentClickListener","bindDocumentResizeListener","onOverlayHide","appendTo","document","body","appendChild","restoreOverlayAppend","nativeElement","style","zIndex","String","zindex","onWindowResize","itemClick","item","disabled","preventDefault","url","command","originalEvent","_this","documentClickListener","listen","unbindDocumentClickListener","documentResizeListener","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","ngOnDestroy","hasSubMenu","model","_b","__values","_c","next","done","value","items","ElementRef","Renderer2","ViewChild","static","Output","animations","trigger","state","transform","opacity","transition","animate","MenuModule","NgModule","imports","CommonModule","RouterModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,ViewChild,Inject,forwardRef} from '@angular/core';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {MenuItem} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\n@Component({\n    selector: '[pMenuItemContent]',\n    template: `\n        <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url||null\" class=\"ui-menuitem-link ui-corner-all\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\" [attr.data-automationid]=\"item.automationId\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\"\n            [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"menu.itemClick($event, item)\" >\n            <span class=\"ui-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\n            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n        </a>\n        <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [attr.data-automationid]=\"item.automationId\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-state-active'\"\n            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"item.target\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\" \n             [attr.title]=\"item.title\" [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"menu.itemClick($event, item)\">\n            <span class=\"ui-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\n            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n        </a>\n    `\n})\nexport class MenuItemContent {\n\n    @Input(\"pMenuItemContent\") item: MenuItem;\n\n    menu: Menu;\n    \n    constructor(@Inject(forwardRef(() => Menu)) menu) {\n        this.menu = menu as Menu;\n    }\n}\n\n@Component({\n    selector: 'p-menu',\n    template: `\n        <div #container [ngClass]=\"{'ui-menu ui-widget ui-widget-content ui-corner-all': true, 'ui-menu-dynamic ui-shadow': popup}\"\n            [class]=\"styleClass\" [ngStyle]=\"style\" (click)=\"preventDocumentDefault=true\" *ngIf=\"!popup || visible\"\n            [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"popup !== true\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n            <ul>\n                <ng-template ngFor let-submenu [ngForOf]=\"model\" *ngIf=\"hasSubMenu()\">\n                    <li class=\"ui-menu-separator ui-widget-content\" *ngIf=\"submenu.separator\" [ngClass]=\"{'ui-helper-hidden': submenu.visible === false}\"></li>\n                    <li class=\"ui-submenu-header ui-widget-header ui-corner-all\" [attr.data-automationid]=\"submenu.automationId\" *ngIf=\"!submenu.separator\" [ngClass]=\"{'ui-helper-hidden': submenu.visible === false}\">{{submenu.label}}</li>\n                    <ng-template ngFor let-item [ngForOf]=\"submenu.items\">\n                        <li class=\"ui-menu-separator ui-widget-content\" *ngIf=\"item.separator\" [ngClass]=\"{'ui-helper-hidden': (item.visible === false ||Â submenu.visible === false)}\"></li>\n                        <li class=\"ui-menuitem ui-widget ui-corner-all\" *ngIf=\"!item.separator\" [pMenuItemContent]=\"item\" [ngClass]=\"{'ui-helper-hidden': (item.visible === false || submenu.visible === false)}\" [ngStyle]=\"item.style\" [class]=\"item.styleClass\"></li>\n                    </ng-template>\n                </ng-template>\n                <ng-template ngFor let-item [ngForOf]=\"model\" *ngIf=\"!hasSubMenu()\">\n                    <li class=\"ui-menu-separator ui-widget-content\" *ngIf=\"item.separator\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\"></li>\n                    <li class=\"ui-menuitem ui-widget ui-corner-all\" *ngIf=\"!item.separator\" [pMenuItemContent]=\"item\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\" [ngStyle]=\"item.style\" [class]=\"item.styleClass\"></li>\n                </ng-template>\n            </ul>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            state('void', style({\n                transform: 'translateY(5%)',\n                opacity: 0\n            })),\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => visible', animate('{{showTransitionParams}}')),\n            transition('visible => void', animate('{{hideTransitionParams}}'))\n        ])\n    ]\n})\nexport class Menu implements OnDestroy {\n\n    @Input() model: MenuItem[];\n\n    @Input() popup: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() appendTo: any;\n\n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() showTransitionOptions: string = '225ms ease-out';\n\n    @Input() hideTransitionOptions: string = '195ms ease-in';\n\n    @ViewChild('container', { static: true }) containerViewChild: ElementRef;\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n    \n    container: HTMLDivElement;\n    \n    documentClickListener: any;\n\n    documentResizeListener: any;\n    \n    preventDocumentDefault: boolean;\n\n    target: any;\n\n    visible: boolean;\n    \n    constructor(public el: ElementRef, public renderer: Renderer2) {}\n\n    toggle(event) {\n        if (this.visible)\n            this.hide();\n        else\n            this.show(event);\n\n        this.preventDocumentDefault = true;\n    }\n\n    show(event) {\n        this.target = event.currentTarget;\n        this.visible = true;\n        this.preventDocumentDefault = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (this.popup) {\n                    this.container = event.element;\n                    this.moveOnTop();\n                    this.onShow.emit({});\n                    this.appendOverlay();\n                    DomHandler.absolutePosition(this.container, this.target);\n                    this.bindDocumentClickListener();\n                    this.bindDocumentResizeListener();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n                this.onHide.emit({});\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                DomHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n    }\n    \n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    hide() {\n        this.visible = false;\n    }\n\n    onWindowResize() {\n        this.hide();\n    }\n    \n    itemClick(event, item: MenuItem)Â {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        if (!item.url) {\n            event.preventDefault();\n        }\n        \n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n        \n        if (this.popup) {\n            this.hide();\n        }\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen('document', 'click', () => {\n                if (!this.preventDocumentDefault) {\n                    this.hide();\n                }\n\n                this.preventDocumentDefault = false;\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    \n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.preventDocumentDefault = false;\n        this.target = null;\n    }\n    \n    ngOnDestroy() {\n        if (this.popup) {\n            this.restoreOverlayAppend();\n            this.onOverlayHide();\n        }\n    }\n    \n    hasSubMenu(): boolean {\n        if (this.model) {\n            for (var item of this.model) {\n                if (item.items) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [Menu,RouterModule],\n    declarations: [Menu,MenuItemContent]\n})\nexport class MenuModule { }\n"]}