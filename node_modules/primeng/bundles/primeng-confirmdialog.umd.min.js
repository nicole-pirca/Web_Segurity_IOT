!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/animations"),require("@angular/common"),require("primeng/dom"),require("primeng/api"),require("primeng/button")):"function"==typeof define&&define.amd?define("primeng/confirmdialog",["exports","@angular/core","@angular/animations","@angular/common","primeng/dom","primeng/api","primeng/button"],t):t(((e=e||self).primeng=e.primeng||{},e.primeng.confirmdialog={}),e.ng.core,e.ng.animations,e.ng.common,e.primeng.dom,e.primeng.api,e.primeng.button)}(this,(function(e,t,i,n,o,a,r){"use strict";var s=this&&this.__decorate||function(e,t,i,n){var o,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,n);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,i,r):o(t,i))||r);return a>3&&r&&Object.defineProperty(t,i,r),r},c=function(){function e(e,i,n,o){var a=this;this.el=e,this.renderer=i,this.confirmationService=n,this.zone=o,this.acceptIcon="pi pi-check",this.acceptLabel="Yes",this.acceptVisible=!0,this.rejectIcon="pi pi-times",this.rejectLabel="No",this.rejectVisible=!0,this.closeOnEscape=!0,this.blockScroll=!0,this.closable=!0,this.autoZIndex=!0,this.baseZIndex=0,this.transitionOptions="150ms cubic-bezier(0, 0, 0.2, 1)",this.focusTrap=!0,this.subscription=this.confirmationService.requireConfirmation$.subscribe((function(e){e.key===a.key&&(a.confirmation=e,a.message=a.confirmation.message||a.message,a.icon=a.confirmation.icon||a.icon,a.header=a.confirmation.header||a.header,a.rejectVisible=null==a.confirmation.rejectVisible?a.rejectVisible:a.confirmation.rejectVisible,a.acceptVisible=null==a.confirmation.acceptVisible?a.acceptVisible:a.confirmation.acceptVisible,a.acceptLabel=a.confirmation.acceptLabel||a.acceptLabel,a.rejectLabel=a.confirmation.rejectLabel||a.rejectLabel,a.confirmation.accept&&(a.confirmation.acceptEvent=new t.EventEmitter,a.confirmation.acceptEvent.subscribe(a.confirmation.accept)),a.confirmation.reject&&(a.confirmation.rejectEvent=new t.EventEmitter,a.confirmation.rejectEvent.subscribe(a.confirmation.reject)),!1===a.confirmation.blockScroll&&(a.blockScroll=a.confirmation.blockScroll),a.visible=!0)}))}return e.prototype.onAnimationStart=function(e){switch(e.toState){case"visible":this.container=e.element,this.contentContainer=o.DomHandler.findSingle(this.container,".ui-dialog-content"),(this.acceptVisible||this.rejectVisible)&&o.DomHandler.findSingle(this.container,"button").focus(),this.appendContainer(),this.moveOnTop(),this.bindGlobalListeners(),this.enableModality();break;case"void":this.onOverlayHide()}},e.prototype.appendContainer=function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.container):o.DomHandler.appendChild(this.container,this.appendTo))},e.prototype.restoreAppend=function(){this.container&&this.appendTo&&this.el.nativeElement.appendChild(this.container)},e.prototype.enableModality=function(){this.mask||(this.mask=document.createElement("div"),this.mask.style.zIndex=String(parseInt(this.container.style.zIndex)-1),o.DomHandler.addMultipleClasses(this.mask,"ui-widget-overlay ui-dialog-mask"),document.body.appendChild(this.mask),o.DomHandler.addClass(document.body,"ui-overflow-hidden"),this.blockScroll&&o.DomHandler.addClass(document.body,"ui-overflow-hidden"))},e.prototype.disableModality=function(){this.mask&&(document.body.removeChild(this.mask),o.DomHandler.removeClass(document.body,"ui-overflow-hidden"),this.blockScroll&&o.DomHandler.removeClass(document.body,"ui-overflow-hidden"),this.mask=null)},e.prototype.close=function(e){this.confirmation.rejectEvent&&this.confirmation.rejectEvent.emit(),this.hide(),e.preventDefault()},e.prototype.hide=function(){this.visible=!1},e.prototype.moveOnTop=function(){this.autoZIndex&&(this.container.style.zIndex=String(this.baseZIndex+ ++o.DomHandler.zindex))},e.prototype.bindGlobalListeners=function(){var e=this;(this.closeOnEscape&&this.closable||this.focusTrap&&!this.documentEscapeListener)&&(this.documentEscapeListener=this.renderer.listen("document","keydown",(function(t){if(27==t.which&&e.closeOnEscape&&e.closable&&parseInt(e.container.style.zIndex)===o.DomHandler.zindex+e.baseZIndex&&e.visible&&e.close(t),9===t.which&&e.focusTrap){t.preventDefault();var i=o.DomHandler.getFocusableElements(e.container);if(i&&i.length>0)if(document.activeElement){var n=i.indexOf(document.activeElement);t.shiftKey?-1==n||0===n?i[i.length-1].focus():i[n-1].focus():-1==n||n===i.length-1?i[0].focus():i[n+1].focus()}else i[0].focus()}})))},e.prototype.unbindGlobalListeners=function(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null)},e.prototype.onOverlayHide=function(){this.disableModality(),this.unbindGlobalListeners(),this.container=null},e.prototype.ngOnDestroy=function(){this.restoreAppend(),this.onOverlayHide(),this.subscription.unsubscribe()},e.prototype.accept=function(){this.confirmation.acceptEvent&&this.confirmation.acceptEvent.emit(),this.hide(),this.confirmation=null},e.prototype.reject=function(){this.confirmation.rejectEvent&&this.confirmation.rejectEvent.emit(),this.hide(),this.confirmation=null},e.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:a.ConfirmationService},{type:t.NgZone}]},s([t.Input()],e.prototype,"visible",void 0),s([t.Input()],e.prototype,"header",void 0),s([t.Input()],e.prototype,"icon",void 0),s([t.Input()],e.prototype,"message",void 0),s([t.Input()],e.prototype,"style",void 0),s([t.Input()],e.prototype,"styleClass",void 0),s([t.Input()],e.prototype,"acceptIcon",void 0),s([t.Input()],e.prototype,"acceptLabel",void 0),s([t.Input()],e.prototype,"acceptVisible",void 0),s([t.Input()],e.prototype,"rejectIcon",void 0),s([t.Input()],e.prototype,"rejectLabel",void 0),s([t.Input()],e.prototype,"rejectVisible",void 0),s([t.Input()],e.prototype,"acceptButtonStyleClass",void 0),s([t.Input()],e.prototype,"rejectButtonStyleClass",void 0),s([t.Input()],e.prototype,"closeOnEscape",void 0),s([t.Input()],e.prototype,"blockScroll",void 0),s([t.Input()],e.prototype,"rtl",void 0),s([t.Input()],e.prototype,"closable",void 0),s([t.Input()],e.prototype,"appendTo",void 0),s([t.Input()],e.prototype,"key",void 0),s([t.Input()],e.prototype,"autoZIndex",void 0),s([t.Input()],e.prototype,"baseZIndex",void 0),s([t.Input()],e.prototype,"transitionOptions",void 0),s([t.Input()],e.prototype,"focusTrap",void 0),s([t.ContentChild(a.Footer,{static:!0})],e.prototype,"footer",void 0),s([t.ViewChild("content",{static:!0})],e.prototype,"contentViewChild",void 0),e=s([t.Component({selector:"p-confirmDialog",template:'\n        <div [ngClass]="{\'ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow\':true,\'ui-dialog-rtl\':rtl}" [ngStyle]="style" [class]="styleClass" (mousedown)="moveOnTop()"\n            [@animation]="{value: \'visible\', params: {transitionParams: transitionOptions}}" (@animation.start)="onAnimationStart($event)" *ngIf="visible">\n            <div class="ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top">\n                <span class="ui-dialog-title" *ngIf="header">{{header}}</span>\n                <a *ngIf="closable" [ngClass]="{\'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all\':true}" tabindex="0" role="button" (click)="close($event)" (keydown.enter)="close($event)">\n                    <span class="pi pi-fw pi-times"></span>\n                </a>\n            </div>\n            <div #content class="ui-dialog-content ui-widget-content">\n                <i [ngClass]="\'ui-confirmdialog-icon\'" [class]="icon" *ngIf="icon"></i>\n                <span class="ui-confirmdialog-message" [innerHTML]="message"></span>\n            </div>\n            <div class="ui-dialog-footer ui-widget-content" *ngIf="footer">\n                <ng-content select="p-footer"></ng-content>\n            </div>\n            <div class="ui-dialog-footer ui-widget-content" *ngIf="!footer">\n                <button type="button" pButton [icon]="acceptIcon" [label]="acceptLabel" (click)="accept()" [class]="acceptButtonStyleClass" *ngIf="acceptVisible"></button>\n                <button type="button" pButton [icon]="rejectIcon" [label]="rejectLabel" (click)="reject()" [class]="rejectButtonStyleClass" *ngIf="rejectVisible"></button>\n            </div>\n        </div>\n    ',animations:[i.trigger("animation",[i.state("void",i.style({transform:"translateX(-50%) translateY(-50%) scale(0.7)",opacity:0})),i.state("visible",i.style({transform:"translateX(-50%) translateY(-50%) scale(1)",opacity:1})),i.transition("* => *",i.animate("{{transitionParams}}"))])]})],e)}(),l=function(){function e(){}return e=s([t.NgModule({imports:[n.CommonModule,r.ButtonModule],exports:[c,r.ButtonModule,a.SharedModule],declarations:[c]})],e)}();e.ConfirmDialog=c,e.ConfirmDialogModule=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-confirmdialog.umd.min.js.map